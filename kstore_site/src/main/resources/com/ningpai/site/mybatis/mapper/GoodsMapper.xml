<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ningpaihsite.goods.dao.GoodsMapper">
	<resultMap id="BaseResultMap" type="com.ningpai.goods.bean.Goods">
		<id column="goods_id" property="goodsId" jdbcType="BIGINT" />
		<result column="cat_id" property="catId" jdbcType="BIGINT" />
		<result column="type_id" property="typeId" jdbcType="BIGINT" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="goods_subtitle" property="goodsSubtitle"
			jdbcType="VARCHAR" />
		<result column="goods_no" property="goodsNo" jdbcType="VARCHAR" />
		<result column="goods_keywords" property="goodsKeywords"
			jdbcType="VARCHAR" />
		<result column="brand_id" property="brandId" jdbcType="BIGINT" />
		<result column="goods_brief" property="goodsBrief" jdbcType="VARCHAR" />
		<result column="goods_added" property="goodsAdded" jdbcType="CHAR" />
		<result column="goods_uptime" property="goodsUptime" jdbcType="TIMESTAMP" />
		<result column="goods_price" property="goodsPrice" jdbcType="DECIMAL" />
		<result column="goods_recom" property="goodsRecom" jdbcType="CHAR" />
		<result column="goods_img" property="goodsImg" jdbcType="VARCHAR" />
		<result column="goods_score" property="goodsScore" jdbcType="DECIMAL" />
		<result column="goods_deno" property="goodsDeno" jdbcType="VARCHAR" />
		<result column="goods_detail_desc" property="goodsDetailDesc"
			jdbcType="LONGVARCHAR" />
		<result column="goods_seo_title" property="goodsSeoTitle"
			jdbcType="VARCHAR" />
		<result column="goods_seo_keyword" property="goodsSeoKeyword"
			jdbcType="VARCHAR" />
		<result column="goods_seo_desc" property="goodsSeoDesc"
			jdbcType="VARCHAR" />
		<result column="goods_prom" property="goodsProm" jdbcType="CHAR" />
		<result column="goods_info_instocksell" property="goodsInfoInstocksell"
			jdbcType="CHAR" />
		<result column="goods_usecoupon" property="goodsUsecoupon"
			jdbcType="CHAR" />
		<result column="goods_create_name" property="goodsCreateName"
			jdbcType="VARCHAR" />
		<result column="goods_create_time" property="goodsCreateTime"
			jdbcType="TIMESTAMP" />
		<result column="goods_modified_name" property="goodsModifiedName"
			jdbcType="VARCHAR" />
		<result column="goods_modified_time" property="goodsModifiedTime"
			jdbcType="TIMESTAMP" />
		<result column="goods_del_name" property="goodsDelName"
			jdbcType="VARCHAR" />
		<result column="goods_del_time" property="goodsDelTime"
			jdbcType="TIMESTAMP" />
		<result column="goods_delflag" property="goodsDelflag"
			jdbcType="CHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.ningpai.goods.bean.Goods"
		extends="BaseResultMap">
		<result column="goods_detail_desc" property="goodsDetailDesc"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	<!-- 包含所有的货品信息的VO -->
	<resultMap type="com.ningpai.site.goods.vo.GoodsDetailVo" id="goodsDetailVo">
		<id column="goods_id" property="goodsId" jdbcType="BIGINT" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="goods_subtitle" property="goodsSubtitle"
			jdbcType="VARCHAR" />
		<result column="goods_keywords" property="goodsKeywords"
			jdbcType="VARCHAR" />
		<result column="goods_no" property="goodsNo" jdbcType="VARCHAR"/>
		<result column="goods_added" property="goodsAdded" jdbcType="CHAR" />
		<result column="goods_price" property="goodsPrice" jdbcType="DECIMAL" />
		<result column="goods_img" property="goodsImg" jdbcType="VARCHAR" />
		<result column="goods_brief" property="goodsBrief" jdbcType="VARCHAR" />
		<result column="goods_recom" property="goodsRecom" jdbcType="CHAR" />
		<result column="goods_deno" property="goodsDeno" jdbcType="VARCHAR" />
		<result column="goods_seo_title" property="goodsSeoTitle"
			jdbcType="VARCHAR" />
		<result column="goods_seo_keyword" property="goodsSeoKeyword"
			jdbcType="VARCHAR" />
		<result column="goods_seo_desc" property="goodsSeoDesc"
			jdbcType="VARCHAR" />
		<result column="goods_prom" property="goodsProm" jdbcType="CHAR" />
		<result column="goods_info_instocksell" property="goodsInfoInstocksell"
			jdbcType="CHAR" />
		<result column="goods_usecoupon" property="goodsUsecoupon"
			jdbcType="CHAR" />
		<result column="goods_detail_desc" property="goodsDetailDesc"
			jdbcType="LONGVARCHAR" />
		<association property="goodsCate" column="cat_id"
			select="com.ningpaihsite.goods.dao.GoodsCateMapper.queryCateVoByCatId"></association>
		<collection property="expandParamVoList" column="goods_id"
			javaType="ArrayList" ofType="com.ningpai.site.goods.vo.GoodsReleExpandParamVo"
			select="com.ningpaihsite.goods.dao.GoodsReleExpandParamMapper.queryAllByGoodsId"></collection>
		<collection property="paramVoList" column="goods_id"
			javaType="ArrayList" ofType="com.ningpai.site.goods.vo.GoodsReleParamVo"
			select="com.ningpaihsite.goods.dao.GoodsReleParamMapper.queryAllByGoodsId"></collection>
		<collection property="specVoList" column="goods_id"
			javaType="ArrayList" ofType="com.ningpai.site.goods.vo.GoodsSpecVo"
			select="com.ningpaihsite.goods.dao.GoodsSpecMapper.querySpecVoByGoodsId"></collection>
		<collection property="productVos" column="goods_id"
			javaType="ArrayList" ofType="com.ningpai.site.goods.vo.GoodsProductVo"
			select="com.ningpaihsite.goods.dao.GoodsProductMapper.queryProductByGoodsId"></collection>
	</resultMap>
	<!-- 显示在列表页的ResultMap -->
	<resultMap type="com.ningpai.site.goods.vo.GoodsShowListVo" id="showlistVo">
		<id column="goods_info_id" property="goodsInfoId" jdbcType="BIGINT" />
	    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
	    <result column="goods_info_item_no" property="goodsInfoItemNo" jdbcType="VARCHAR" />
	    <result column="goods_info_name" property="productName" jdbcType="VARCHAR"/>
	    <result column="goods_info_subtitle" property="subtitle" jdbcType="VARCHAR"/>
	    <result column="goods_info_added" property="goodsInfoAdded" jdbcType="CHAR" />
	    <result column="ware_stock" property="goodsInfoStock" jdbcType="BIGINT" />
	    <result column="goods_info_prefer_price" property="goodsInfoPreferPrice" jdbcType="DECIMAL" />
	    <result column="goods_info_cost_price" property="goodsInfoCostPrice" jdbcType="DECIMAL" />
	    <result column="goods_info_market_price" property="goodsInfoMarketPrice" jdbcType="DECIMAL" />
        <result column="ware_price" property="warePrice" jdbcType="DECIMAL" />
	    <result column="goods_info_weight" property="goodsInfoWeight" jdbcType="DECIMAL" />
	    <result column="goods_info_img_id" property="goodsInfoImgId" jdbcType="VARCHAR" />
	    <result column="goods_info_delflag" property="goodsInfoDelflag" jdbcType="CHAR" />
            <result column="third_id" property="thirdId" jdbcType="CHAR"/>
	    <result column="third_name" property="thirdName" jdbcType="VARCHAR"/>
	    <result column="is_third" property="isThird" jdbcType="CHAR"/>
	    <result column="goods_info_stock" property="goodsInfoStockThird" jdbcType="BIGINT"/>
	    
	    
	    <!-- <association property="goods" column="goods_id" 
	    	select="com.ningpaihsite.goods.dao.GoodsMapper.selectGoodsByGoodsId"></association> -->
	   <!--  <collection property="specVo" column="goods_info_id" javaType="ArrayList" ofType="com.ningpai.site.goods.vo.GoodsProductReleSpecVo"
	  		select="com.ningpaihsite.goods.dao.GoodsProductReleSpecMapper.queryAllByProductId"
	  	></collection> -->
	  	<association property="commentUtilBean" column="goods_info_id" select="com.ningpaihsite.goods.dao.GoodsMapper.queryCommentCountAndScoreByProductId"></association>
	    <collection property="imageList" column="goods_info_id" javaType="ArrayList" ofType="com.ningpai.site.goods.bean.GoodsImage"
	  		select="com.ningpaihsite.goods.dao.GoodsImageMapper.queryByProductId"
	  	></collection>
	</resultMap><!-- 显示在列表页的ResultMap -->

    <resultMap type="com.ningpai.site.goods.vo.GoodsShowListVo" id="showlistVoNew">
		<id column="goods_info_id" property="goodsInfoId" jdbcType="BIGINT" />
	    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
	    <result column="goods_info_item_no" property="goodsInfoItemNo" jdbcType="VARCHAR" />
	    <result column="goods_info_name" property="productName" jdbcType="VARCHAR"/>
	    <result column="goods_info_subtitle" property="subtitle" jdbcType="VARCHAR"/>
	    <result column="goods_info_added" property="goodsInfoAdded" jdbcType="CHAR" />
	    <result column="ware_stock" property="goodsInfoStock" jdbcType="BIGINT" />
	    <result column="goods_info_prefer_price" property="goodsInfoPreferPrice" jdbcType="DECIMAL" />
	    <result column="ware_price" property="warePrice" jdbcType="DECIMAL" />
	    <result column="goods_info_market_price" property="goodsInfoMarketPrice" jdbcType="DECIMAL" />
	    <result column="goods_info_weight" property="goodsInfoWeight" jdbcType="DECIMAL" />
	    <result column="goods_info_img_id" property="goodsInfoImgId" jdbcType="VARCHAR" />
	    <result column="goods_info_delflag" property="goodsInfoDelflag" jdbcType="CHAR" />
            <result column="third_id" property="thirdId" jdbcType="CHAR"/>
	    <result column="third_name" property="thirdName" jdbcType="VARCHAR"/>
	    <result column="is_third" property="isThird" jdbcType="CHAR"/>
	    <result column="goods_info_stock" property="goodsInfoStockThird" jdbcType="BIGINT"/>


	    <!-- <association property="goods" column="goods_id"
	    	select="com.ningpaihsite.goods.dao.GoodsMapper.selectGoodsByGoodsId"></association> -->
	   <!--  <collection property="specVo" column="goods_info_id" javaType="ArrayList" ofType="com.ningpai.site.goods.vo.GoodsProductReleSpecVo"
	  		select="com.ningpaihsite.goods.dao.GoodsProductReleSpecMapper.queryAllByProductId"
	  	></collection> -->
	  	<association property="commentUtilBean" column="goods_info_id" select="com.ningpaihsite.goods.dao.GoodsMapper.queryCommentCountAndScoreByProductId"></association>
	    <collection property="imageList" column="goods_info_id" javaType="ArrayList" ofType="com.ningpai.site.goods.bean.GoodsImage"
	  		select="com.ningpaihsite.goods.dao.GoodsImageMapper.queryByProductId"
	  	></collection>
	</resultMap>
	<!-- 商品列表页分数工具 -->
	<resultMap type="com.ningpai.site.goods.util.ProductCommentUtilBean" id="commentUtilBeanResultMap">
		<result column="count" property="count" jdbcType="VARCHAR"/>
		<result column="score" property="score" jdbcType="VARCHAR"/>
	</resultMap>
	<sql id="Base_Column_List">
		g.goods_id, g.cat_id, g.type_id, g.goods_name, g.goods_subtitle, g.goods_no,
		g.goods_keywords,
		g.brand_id, g.goods_brief, g.goods_added, g.goods_uptime, g.goods_price, g.goods_recom,
		g.goods_img,
		g.goods_score, g.goods_deno, g.goods_seo_title, g.goods_seo_keyword, g.goods_seo_desc,
		g.goods_prom,
		g.goods_info_instocksell, g.goods_usecoupon, g.goods_create_name, g.goods_create_time,
		g.goods_modified_name,
		g.goods_modified_time, g.goods_del_name, g.goods_del_time,g.goods_delflag
	</sql>
	<sql id="Product_Base_Column_List" >
	    i.goods_info_id, i.goods_id,i.goods_info_name,i.goods_info_subtitle ,i.goods_info_item_no, i.goods_info_added, i.goods_info_added_time, 
	     i.goods_info_prefer_price, i.goods_info_cost_price, i.goods_info_market_price, 
	    i.goods_info_weight, i.goods_info_img_id, i.goods_info_create_name, i.goods_info_create_time, 
	    i.goods_info_modified_name, i.goods_info_modified_time, i.goods_info_del_name, i.goods_info_del_time, 
	    i.goods_info_delflag,i.third_id,i.third_name,i.is_third,i.goods_info_stock
  	</sql>
	<sql id="Blob_Column_List">
		g.goods_detail_desc
	</sql>
	<!-- 根据商品ID查询商品信息 -->
	<select id="selectGoodsByGoodsId" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>,g.goods_detail_desc from np_goods g where g.goods_id=#{goodsId}
	</select>
    <!-- 根据货品ID查询商品分类Id信息 -->
    <select id="searchGoodsCatIdByGoodsInfoId" resultType="java.lang.Long" parameterType="java.lang.Long">
        select goods.cat_id  from np_goods goods,np_goods_info info
        where  info.goods_id=goods.goods_id and info.goods_info_id=#{goodsInfoId}
    </select>
	<!-- 搜索商品列表 -->
	<select id="searchGoods" resultMap="showlistVo" parameterType="java.util.Map">
		select DISTINCT <include refid="Product_Base_Column_List"/>,  IFNULL(w.ware_stock,0) AS ware_stock,
        IFNULL(w.ware_price,i.goods_info_prefer_price) AS ware_price  from np_goods_info i
        inner join (select goods_id,cat_id,brand_id from np_goods) j on j.goods_id = i.goods_id
		left join (select sum(goods_info_num) as count, goods_info_id from np_order_goods
		where order_id in (select order_id from np_order where order_status='3') group by goods_info_id) o
					on o.goods_info_id=i.goods_info_id
		left join (select ware_stock,product_id,ware_price from np_product_ware
			 where ware_id in (select ware_id from np_ware_city where city_id=#{distinctId} AND del_flag='0')) w on w.product_id = i.goods_info_id
		left join (select count(1) as attecount,goods_id from np_customer_follow group by goods_id) a on a.goods_id=i.goods_info_id
        <!-- 如果参数不为空的时候 -->
        <if test="params != null">
            INNER join (select s.goods_id from (select h.goods_id,count(h.goods_id) as c
            from (select x.goods_id from np_goods_rele_expandparam as x
            where 1=1 and
            <foreach collection="params" item="param" open="(" close=")" separator=" or ">
                x.expangparam_value_id =#{param}
            </foreach>
            and x.rele_expandparam_delflag='0') as h GROUP BY H.goods_id HAVING c >= #{paramLengh} ) s ) ex
            on ex.goods_id = i.goods_id
        </if>
        <!-- 拼接规格信息 -->
        <if test="specs != null">
            INNER join  (select s.goods_info_id from (select h.goods_info_id,count(h.goods_info_id) as c
            from (select x.goods_info_id from np_goods_info_rele_spec_detail as x
            where 1=1 and
            <foreach collection="specs" item="spec" open="(" close=")" separator=" or ">
                x.spec_detail_id = #{spec}
            </foreach>
            ) as h GROUP BY h.goods_info_id HAVING c >= #{specsLengh} ) s ) sp
            on sp.goods_info_id = i.goods_info_id
        </if>
		where 
		i.goods_info_delflag='0' and i.goods_info_added='1'
        <!-- 判断商品品牌数组不为空就拼接条件 -->
        <if test="brandId != null and brandId !='' ">
            and j.brand_id=#{brandId}
        </if>
        <!-- 如果参数不为空的时候 -->
        <if test="params != null">
            and ex.goods_id is not null
        </if>
        <!-- 拼接规格查询 -->
        <if test="specs != null">
            and sp.goods_info_id is not null
        </if>
		<!-- 根据输入的字符查询 -->
	    <if test="productIds != null and searchBean.title != null and searchBean.title!=''">
			and i.goods_info_id in
			<foreach collection="productIds" item="productId" open="(" close=")" separator=",">
				#{productId}
			</foreach>
		</if>
		<!--  判断 是否显示无货商品 -->
		<if test="searchBean.showStock!=null and searchBean.showStock!='' and searchBean.showStock==1">
			and i.goods_info_stock>0
		</if>
        <!-- 手动输入价格范围 -->
        <if test="searchBean.priceMin!=null and searchBean.priceMin!=''">
            and i.goods_info_prefer_price > #{searchBean.priceMin}
        </if>
        <if test="searchBean.priceMax!=null and searchBean.priceMax!=''">
            and #{searchBean.priceMax} > i.goods_info_prefer_price
        </if>
		<!-- 按照价格排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='11D'">
			order by i.goods_info_prefer_price
		</if>
		<!-- 按照价格排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='1D'">
			order by i.goods_info_prefer_price desc
		</if>
		<!-- 按照销量排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='2D'">
			order by o.count desc
		</if>
		<!-- 按照销量排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='22D'">
			order by o.count
		</if>
		<!-- 按照创建时间排序-->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='33D'">
			order by i.goods_info_create_time
		</if>
		<!-- 按照创建时间排序-->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='3D'">
			order by i.goods_info_create_time desc
		</if>
		<!-- 按照关注排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='44D'">
			order by a.attecount
		</if>
		<!-- 按照关注排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='4D'">
			order by a.attecount desc
		</if>
		<if test="searchBean.sort==null or searchBean.sort==''">
			order by field(i.goods_info_id,
			<foreach collection="productIds" item="id" open="" close="" separator=",">
				#{id}
			</foreach>
			) 
		</if>
		limit #{startRowNum},#{endRowNum}
	</select>
	<!-- 根据查询参数查询行数 -->
	<select id="searchTotalCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select COUNT(1) from np_goods_info where 
		goods_info_delflag='0' and goods_info_added='1' 
		<!-- 根据输入的字符查询 -->
		<if test="productIds != null and searchBean.title != null and searchBean.title!=''">
			and goods_info_id in
			<foreach collection="productIds" item="productId" open="(" close=")" separator=",">
				#{productId}
			</foreach>	
		</if>
		<!-- 判断是都显示无货商品 -->
		<if test="searchBean.showStock!=null and searchBean.showStock!='' and searchBean.showStock==1">
			and goods_info_stock>0
		</if>
        <!-- 手动输入价格范围 -->
        <if test="searchBean.priceMin!=null and searchBean.priceMin!=''">
            and goods_info_prefer_price > #{searchBean.priceMin}
        </if>
        <if test="searchBean.priceMax!=null and searchBean.priceMax!=''">
            and #{searchBean.priceMax} > goods_info_prefer_price
        </if>
	</select>
	<!-- 根据商品ID查询货品库存的和 -->
	<select id="queryStockByGoodsId" resultType="java.lang.Integer" parameterType="java.lang.Long">
		select sum(goods_info_stock) from np_goods_info where goods_info_added='1' and goods_info_delflag='0'
		and goods_id=#{goodsId}
	</select>
	<!-- 查询最新的三条记录 -->
	<select id="queryNewInfo" resultMap="BaseResultMap" parameterType="java.util.Map">
		select distinct <include refid="Base_Column_List"/> from np_goods g,np_goods_info i where g.goods_id=i.goods_id and 
		g.goods_delflag='0' and g.goods_added='1'
		<if test="catId!='-1'">
			and g.cat_id in 
			<foreach collection="catIds" open="(" close=")" separator="," item="catId">
				#{catId}
			</foreach>
		</if>
		order by g.goods_create_time desc
		limit 0,5
	</select>
	<!-- 根据分类ID查询推荐到首页的商品 -->
	<select id="queryPromGoodsByCatIds" parameterType="java.util.Map" resultMap="BaseResultMap">
		select distinct <include refid="Base_Column_List"/> from np_goods g,np_goods_info i where g.goods_id=i.goods_id and 
		g.goods_delflag='0' and g.goods_added='1' and cat_id in
		<foreach collection="catIds" open="(" close=")" separator="," item="catId">
			#{catId}
		</foreach>
		limit 0,4
	</select>
	<!--列表页, 根据分类ID查询商品列表 -->


    <select id="queryGoodsListByPid" parameterType="java.util.Map" resultMap="showlistVoNew">
        select <include refid="Product_Base_Column_List"/>, IFNULL(w.ware_stock,0) AS ware_stock,
        IFNULL(w.ware_price,i.goods_info_prefer_price) AS ware_price from np_goods_info i

        <!-- 如果是排序就拼接左链接 -->
        <if test="searchBean.sort!=null and searchBean.sort!=''">
            <!-- 如果是按照销量排序 -->
            <if test="(searchBean.sort=='2D' or searchBean.sort=='22D')">
                left join (select sum(goods_info_num) as count, og.goods_info_id from np_order_goods og
                left join (select order_id from np_order where order_status='3') os on og.order_id = os.order_id
                group by goods_info_id) o
                on o.goods_info_id=i.goods_info_id
            </if>
            <!-- 如果是按照人气排序 -->
            <if test="(searchBean.sort=='44D' or searchBean.sort=='4D')">
                left join (select count(1) as attecount,goods_id from np_customer_follow group by goods_id) a on a.goods_id=i.goods_info_id
            </if>

        </if>

        left join (select ware_stock,product_id,ware_price
        from np_product_ware p
        where p.ware_id in (select c.ware_id
        from np_ware_city c,np_warehouse h
        where h.ware_id=c.ware_id and
        c.city_id=#{distinctId} AND h.del_flag='0'
        and c.del_flag='0') and p.del_flag='0'
        GROUP BY p.product_id ) w on w.product_id = i.goods_info_id

        left join (select goods_id,cat_id,brand_id from np_goods) j on j.goods_id = i.goods_id
        <!-- 如果参数不为空的时候 -->
        <if test="params != null">
            left join (select s.goods_id from (select h.goods_id,count(h.goods_id) as c
            from (select x.goods_id from np_goods_rele_expandparam as x
            where 1=1 and
            <foreach collection="params" item="param" open="(" close=")" separator=" or ">
                x.expangparam_value_id =#{param}
            </foreach>
            and x.rele_expandparam_delflag='0') as h GROUP BY H.goods_id HAVING c >= #{paramLengh} ) s ) ex
            on ex.goods_id = i.goods_id
        </if>
        <!-- 拼接规格信息 -->
        <if test="specs != null">
            left join  (select s.goods_info_id from (select h.goods_info_id,count(h.goods_info_id) as c
            from (select x.goods_info_id from np_goods_info_rele_spec_detail as x
            where 1=1 and
            <foreach collection="specs" item="spec" open="(" close=")" separator=" or ">
                x.spec_detail_id = #{spec}
            </foreach>
            ) as h GROUP BY h.goods_info_id HAVING c >= #{specsLengh} ) s ) sp
            on sp.goods_info_id = i.goods_info_id
        </if>
        where j.goods_id = i.goods_id and
        goods_info_delflag='0' and goods_info_added='1' and show_list='1' and ( audit_status='0'or audit_status='3' )
        and
        j.cat_id in (SELECT cat_id FROM  np_goods_category WHERE cat_parent_id IN (SELECT cat_id FROM np_goods_category WHERE cat_parent_id=#{catId,jdbcType=BIGINT} AND cat_delflag='0') AND cat_delflag='0')
        <!-- 判断商品品牌数组不为空就拼接条件 -->
        <if test="brandId != null and brandId!=''">
            and j.brand_id=#{brandId}
        </if>
        <!-- 如果参数不为空的时候 -->
        <if test="params != null">
            and ex.goods_id is not null
        </if>
        <!-- 拼接规格信息 -->
        <if test="specs != null">
            and sp.goods_info_id is not null
        </if>
        <!-- 拼接规格信息 -->
        <!-- 判断是都显示无货商品 -->
        <if test="searchBean.showStock!=null and searchBean.showStock!='' and searchBean.showStock==1">
            and w.ware_stock>0
        </if>
        <!-- 手动输入价格范围 -->
        <if test="searchBean.priceMin!=null and searchBean.priceMin!=''">
            and i.goods_info_prefer_price > #{searchBean.priceMin}
        </if>
        <if test="searchBean.priceMax!=null and searchBean.priceMax!=''">
            and #{searchBean.priceMax} > i.goods_info_prefer_price
        </if>
        <!-- 按照价格排序 -->
        <if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='11D'">
            order by i.goods_info_prefer_price
        </if>
        <!-- 按照价格排序 -->
        <if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='1D'">
            order by i.goods_info_prefer_price desc
        </if>
        <!-- 按照销量排序 -->
        <if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='2D'">
            order by o.count desc
        </if>
        <!-- 按照销量排序 -->
        <if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='22D'">
            order by o.count
        </if>
        <!-- 按照创建时间排序-->
        <if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='33D'">
            order by i.goods_info_added_time
        </if>
        <!-- 按照创建时间排序-->
        <if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='3D'">
            order by i.goods_info_added_time desc
        </if>
        <!-- 按照关注排序 -->
        <if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='44D'">
            order by a.attecount
        </if>
        <!-- 按照关注排序 -->
        <if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='4D'">
            order by a.attecount desc
        </if>
        limit #{startRowNum},#{endRowNum}
    </select>
	<select id="queryGoodsListByCatId" parameterType="java.util.Map" resultMap="showlistVoNew">
		select <include refid="Product_Base_Column_List"/>, IFNULL(w.ware_stock,0) AS ware_stock,
        IFNULL(w.ware_price,i.goods_info_prefer_price) AS ware_price from np_goods_info i

		<!-- 如果是排序就拼接左链接 -->
		<if test="searchBean.sort!=null and searchBean.sort!=''">
		    <!-- 如果是按照销量排序 -->
		    <if test="(searchBean.sort=='2D' or searchBean.sort=='22D')">
			left join (select sum(goods_info_num) as count, og.goods_info_id from np_order_goods og
					left join (select order_id from np_order where order_status='3') os on og.order_id = os.order_id
						group by goods_info_id) o 
						on o.goods_info_id=i.goods_info_id
			</if>
			<!-- 如果是按照人气排序 -->
		     <if test="(searchBean.sort=='44D' or searchBean.sort=='4D')">
				left join (select count(1) as attecount,goods_id from np_customer_follow group by goods_id) a on a.goods_id=i.goods_info_id
			</if>
			
		</if>

		left join (select ware_stock,product_id,ware_price
		 from np_product_ware p
			 where p.ware_id in (select c.ware_id 
			 from np_ware_city c,np_warehouse h 
			  where h.ware_id=c.ware_id and 
			  c.city_id=#{distinctId} AND h.del_flag='0' 
			  and c.del_flag='0') and p.del_flag='0'
 		GROUP BY p.product_id ) w on w.product_id = i.goods_info_id

		left join (select goods_id,cat_id,brand_id from np_goods) j on j.goods_id = i.goods_id
		<!-- 如果参数不为空的时候 -->
		<if test="params != null">
			left join (select s.goods_id from (select h.goods_id,count(h.goods_id) as c  
			from (select x.goods_id from np_goods_rele_expandparam as x  
			where 1=1 and
			<foreach collection="params" item="param" open="(" close=")" separator=" or ">
				x.expangparam_value_id =#{param}
			</foreach>
			and x.rele_expandparam_delflag='0') as h GROUP BY H.goods_id HAVING c >= #{paramLengh} ) s ) ex
			on ex.goods_id = i.goods_id
		</if>
		<!-- 拼接规格信息 -->
		<if test="specs != null">
		  left join  (select s.goods_info_id from (select h.goods_info_id,count(h.goods_info_id) as c  
			 from (select x.goods_info_id from np_goods_info_rele_spec_detail as x  
			 where 1=1 and
			 	<foreach collection="specs" item="spec" open="(" close=")" separator=" or ">
				x.spec_detail_id = #{spec}
			</foreach>
		 ) as h GROUP BY h.goods_info_id HAVING c >= #{specsLengh} ) s ) sp
		 on sp.goods_info_id = i.goods_info_id
		</if>
        where j.goods_id = i.goods_id and
        goods_info_delflag='0' and goods_info_added='1' and show_list='1' and ( audit_status='0'or audit_status='3' )
        and
        <foreach collection="catIds" index="index" item="catId" open="("
                 separator="or" close=")">
            j.cat_id =#{catId}
        </foreach>
		<!-- 判断商品品牌数组不为空就拼接条件 -->
		<if test="brandId != null and brandId!=''">
				and j.brand_id=#{brandId}
		</if>
		<!-- 如果参数不为空的时候 -->
		<if test="params != null">
			and ex.goods_id is not null
		</if>
		<!-- 拼接规格信息 -->
		<if test="specs != null">
		  and sp.goods_info_id is not null
		</if>
		<!-- 拼接规格信息 -->
		<!-- 判断是都显示无货商品 -->
		<if test="searchBean.showStock!=null and searchBean.showStock!='' and searchBean.showStock==1">
			 and w.ware_stock>0
		</if>
        <!-- 手动输入价格范围 -->
        <if test="searchBean.priceMin!=null and searchBean.priceMin!=''">
            and i.goods_info_prefer_price > #{searchBean.priceMin}
        </if>
        <if test="searchBean.priceMax!=null and searchBean.priceMax!=''">
            and #{searchBean.priceMax} > i.goods_info_prefer_price
        </if>
		<!-- 按照价格排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='11D'">
			order by i.goods_info_prefer_price
		</if>
		<!-- 按照价格排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='1D'">
			order by i.goods_info_prefer_price desc
		</if>
		<!-- 按照销量排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='2D'">
			order by o.count desc
		</if>
		<!-- 按照销量排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='22D'">
			order by o.count
		</if>
		<!-- 按照创建时间排序-->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='33D'">
			order by i.goods_info_added_time
		</if>
		<!-- 按照创建时间排序-->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='3D'">
			order by i.goods_info_added_time desc
		</if>
		<!-- 按照关注排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='44D'">
			order by a.attecount
		</if>
		<!-- 按照关注排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='4D'">
			order by a.attecount desc
		</if>
		limit #{startRowNum},#{endRowNum}
	</select>
	<!-- 列表页,根据分类ID和查询参数查询行数 -->
	<select id="searchTotalCountByParamAndCatId" resultType="java.lang.Integer" parameterType="java.util.Map">
		select COUNT(1) from np_goods_info i
		inner join (select goods_id,cat_id,brand_id from np_goods) j on j.goods_id = i.goods_id
		<!-- 判断是否显示无货商品 -->
		<if test="searchBean.showStock!=null and searchBean.showStock!='' and searchBean.showStock==1">
			inner join  (select product_id,ware_stock from np_product_ware
			 where ware_id = (select ware_id from np_ware_city where city_id=#{distinctId} limit 0,1)) as w on w.product_id = i.goods_info_id
		</if>
		<!-- 如果参数不为空的时候 -->
		<if test="params != null">
			inner join  (select s.goods_id from (select h.goods_id,count(h.goods_id) as c  
			 from (select x.goods_id from np_goods_rele_expandparam as x  
			 where 1=1 and
			<foreach collection="params" item="param" open="(" close=")" separator=" or ">
				x.expangparam_value_id = #{param}
			</foreach>
			and x.rele_expandparam_delflag='0' ) as h GROUP BY h.goods_id HAVING c >= #{paramLengh} ) s ) as ex
			on ex.goods_id = i.goods_id
		</if>
		<!-- 拼接规格查询 -->
		<if test="specs != null">
		   left join (select s.goods_info_id from (select h.goods_info_id,count(h.goods_info_id) as c  
			 from (select x.goods_info_id from np_goods_info_rele_spec_detail as x  
			 where 1=1 and
			 	<foreach collection="specs" item="spec" open="(" close=")" separator=" or ">
				x.spec_detail_id = #{spec}
			</foreach>
		 ) as h GROUP BY h.goods_info_id HAVING c >= #{specsLengh} ) s ) as sp
		 on sp.goods_info_id = i.goods_info_id
		</if>
        where j.goods_id = i.goods_id and
        goods_info_delflag='0' and goods_info_added='1' and show_list='1' and (audit_status='0' or audit_status='3')
        and
        <foreach collection="catIds" index="index" item="catId" open="("
                 separator="or" close=")">
            j.cat_id =#{catId}
        </foreach>
		<!-- 判断商品品牌数组不为空就拼接条件 -->
		<if test="brandId != null and brandId !='' ">
				and j.brand_id=#{brandId}
		</if>
		<!-- 如果参数不为空的时候 -->
		<if test="params != null">
			and ex.goods_id is not null
		</if>
		<!-- 拼接规格查询 -->
		<if test="specs != null">
		    and sp.goods_info_id is not null 
		</if>
		<!-- 判断是否显示无货商品 -->
		<if test="searchBean.showStock!=null and searchBean.showStock!='' and searchBean.showStock==1">
			and w.ware_stock>0
		</if>
        <!-- 手动输入价格范围 -->
        <if test="searchBean.priceMin!=null and searchBean.priceMin!=''">
            and i.goods_info_prefer_price > #{searchBean.priceMin}
        </if>
        <if test="searchBean.priceMax!=null and searchBean.priceMax!=''">
            and #{searchBean.priceMax} > i.goods_info_prefer_price
        </if>
	</select>
	<!-- 根据商品ID查询商品的详细信息 -->
	<select id="queryGoodsDetailVoByGoodsId" parameterType="java.lang.Long" resultMap="goodsDetailVo">
		select <include refid="Base_Column_List"/>,<include refid="Blob_Column_List"/> from np_goods g
		where goods_id=#{goodsId}
	</select>
	<!-- 根据货品ID查询评论的个数和分数 -->
	<select id="queryCommentCountAndScoreByProductId" resultMap="commentUtilBeanResultMap" parameterType="java.lang.Long">
		select count(goods_id) as count,avg(comment_score) as score from np_comment where is_display='1' and del_flag='0' 
		and goods_id=#{productId} and is_consult='0' group by goods_id
	</select>
	
	
	<!-- 货品总条数-->
	<select id="searchGoodsCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(i.goods_info_id) from np_goods_info i
        inner join (select goods_id,cat_id,brand_id from np_goods) j on j.goods_id = i.goods_id
		left join (select sum(goods_info_num) as count, np_order_goods.goods_info_id from np_order_goods 
					where order_id in (select order_id from np_order where order_status='3') group by goods_info_id) o 
					on o.goods_info_id=i.goods_info_id
		left join (select count(*) as attecount,goods_id from np_customer_follow group by goods_id) a on a.goods_id=i.goods_info_id
		<!-- 连接np_goods表 根据第三方分类查询-->
		right join np_goods ng
		on i.goods_id=ng.goods_id and ng.goods_delflag='0'
        <!-- 如果参数不为空的时候 -->
        <if test="params != null">
            left join (select s.goods_id from (select h.goods_id,count(h.goods_id) as c
            from (select x.goods_id from np_goods_rele_expandparam as x
            where 1=1 and
            <foreach collection="params" item="param" open="(" close=")" separator=" or ">
                x.expangparam_value_id =#{param}
            </foreach>
            and x.rele_expandparam_delflag='0') as h GROUP BY H.goods_id HAVING c >= #{paramLengh} ) s ) ex
            on ex.goods_id = i.goods_id
        </if>
        <!-- 拼接规格信息 -->
        <if test="specs != null">
            left join  (select s.goods_info_id from (select h.goods_info_id,count(h.goods_info_id) as c
            from (select x.goods_info_id from np_goods_info_rele_spec_detail as x
            where 1=1 and
            <foreach collection="specs" item="spec" open="(" close=")" separator=" or ">
                x.spec_detail_id = #{spec}
            </foreach>
            ) as h GROUP BY h.goods_info_id HAVING c >= #{specsLengh} ) s ) sp
            on sp.goods_info_id = i.goods_info_id
        </if>
		where 
		i.goods_info_delflag='0' and i.goods_info_added='1'
        <!-- 判断商品品牌数组不为空就拼接条件 -->
        <if test="brandId != null and brandId !='' ">
            and j.brand_id=#{brandId}
        </if>
        <!-- 如果参数不为空的时候 -->
        <if test="params != null">
            and ex.goods_id is not null
        </if>
        <!-- 拼接规格查询 -->
        <if test="specs != null">
            and sp.goods_info_id is not null
        </if>
		<!-- 根据输入的字符查询 -->
		<if test="productIds != null and searchBean.title != null and searchBean.title!=''">
			and i.goods_info_id in
			<foreach collection="productIds" item="productId" open="(" close=")" separator=",">
				#{productId}
			</foreach>
		</if>
		<!-- 根据第三方商品分类查询 -->
		<if test="thirdCateIds != null and thirdCateIds != ''">
		    and ng.third_cate_id in
		    <foreach collection="thirdCateIds" item="tCateId" open="(" close=")" separator=",">
		    	#{tCateId}
		    </foreach>
		</if>
		<!-- 所属第三方商家 -->
		<if test="thirdId != null and thirdId !=''">
		    and i.third_id = #{thirdId}
		</if>
		<!-- 价格区间 -->
		<if test="searchBean.startPrice != null and searchBean.startPrice != ''">
		    and i.goods_info_prefer_price &gt; #{searchBean.startPrice}
		</if>
		<if test="searchBean.endPrice != null and searchBean.endPrice != ''">
		    and i.goods_info_prefer_price &lt; #{searchBean.endPrice}
		</if>
		<!--  判断 是否显示无货商品 -->
		<if test="searchBean.showStock != null and searchBean.showStock !='' and searchBean.showStock==1">
			and i.goods_info_stock>0
		</if>
	</select>
	
	<!-- 查询第三方店铺货品 -->
	<select id="searcThirdGoods" resultMap="showlistVo" parameterType="java.util.Map">
		select <include refid="Product_Base_Column_List"/>,i.goods_info_stock ware_stock from np_goods_info i
		left join (select sum(goods_info_num) as count, np_order_goods.goods_info_id from np_order_goods 
					where order_id in (select order_id from np_order where order_status='3') group by goods_info_id) o 
					on o.goods_info_id=i.goods_info_id
		left join (select count(1) as attecount,goods_id from np_customer_follow group by goods_id) a on a.goods_id=i.goods_info_id
		<!-- 连接np_goods表 根据第三方分类查询- -->
		right join np_goods ng
		on i.goods_id=ng.goods_id  and ng.goods_delflag='0'
		where 
		i.goods_info_delflag='0' and i.goods_info_added='1'
		<!-- 根据输入的字符查询 -->
	   <if test="productIds != null and searchBean.title != null and searchBean.title!=''">
			and i.goods_info_id in
			<foreach collection="productIds" item="productId" open="(" close=")" separator=",">
				#{productId}
			</foreach>
		</if>
			<!-- 根据第三方商品分类查询-->
		<if test="thirdCateIds!=null and thirdCateIds!=''">
		    and ng.third_cate_id in
		    <foreach collection="thirdCateIds" item="tCateId" open="(" close=")" separator=",">
		    	#{tCateId}
		    </foreach>
		</if>
		<!-- 所属第三方商家 -->
		<if test="thirdId!=null and thirdId!=''">
		    and i.third_id=#{thirdId}
		</if>
		<!-- 价格区间-->
		<if test="searchBean.startPrice!=null and searchBean.startPrice!=''">
		    and i.goods_info_prefer_price &gt; #{searchBean.startPrice}
		</if>
		<if test="searchBean.endPrice!=null and searchBean.endPrice!=''">
		    and i.goods_info_prefer_price &lt; #{searchBean.endPrice}
		</if>
		
		<!--  判断 是否显示无货商品 -->
		<if test="searchBean.showStock!=null and searchBean.showStock!='' and searchBean.showStock==1">
			and i.goods_info_stock>0
		</if>
		<!-- 按照价格排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='11D'">
			order by i.goods_info_prefer_price
		</if>
		<!-- 按照价格排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='1D'">
			order by i.goods_info_prefer_price desc
		</if>
		<!-- 按照销量排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='2D'">
			order by o.count desc
		</if>
		<!-- 按照销量排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='22D'">
			order by o.count
		</if>
		<!-- 按照创建时间排序-->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='33D'">
			order by i.goods_info_create_time
		</if>
		<!-- 按照创建时间排序-->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='3D'">
			order by i.goods_info_create_time desc
		</if>
		<!-- 按照关注排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='44D'">
			order by a.attecount
		</if>
		<!-- 按照关注排序 -->
		<if test="searchBean.sort!=null and searchBean.sort!='' and searchBean.sort=='4D'">
			order by a.attecount desc
		</if>
		limit #{startRowNum},#{endRowNum}
	</select>
	
	
	
	<select id="selectProductsByBrandId" resultMap="showlistVo" parameterType="java.util.Map" >
		select <include refid="Product_Base_Column_List"/>
		,IFNULL(w.ware_stock,0) AS ware_stock,IFNULL(w.ware_price,i.goods_info_prefer_price)AS ware_price
		 from np_goods_info i 
		LEFT JOIN (SELECT
        ware_stock,
        product_id,
        ware_price
        FROM np_product_ware p,np_ware_city c
        WHERE p.ware_id=c.ware_id
        AND c.city_id= #{distinctId}
        GROUP BY p.product_id)w on w.product_id = i.goods_info_id
		 where i.goods_id in(
		select g.goods_id from np_goods g where g.brand_id=#{brandId})
		and i.goods_info_delflag='0'
		limit #{startRowNum},#{endRowNum}
	</select>
	
	
	<select id="selectProductsCountByBrandId" resultType="java.lang.Integer" parameterType="java.lang.Long" >
		select count(1) from np_goods_info i 
		LEFT JOIN (SELECT
        ware_stock,
        product_id,
        ware_price
        FROM np_product_ware p,np_ware_city c
        WHERE p.ware_id=c.ware_id
        AND c.city_id= #{distinctId}
        GROUP BY p.product_id)w on w.product_id = i.goods_info_id
		where i.goods_id in(
		select g.goods_id from np_goods g where g.brand_id=#{brandId})
		and i.goods_info_delflag='0'
	</select>
	
	<select id="selectCatIdByBrandId" resultType="java.lang.Long" parameterType="java.lang.Long">
		select DISTINCT g.cat_id from np_goods g where g.brand_id=#{brandId}	
	</select>
	
</mapper>