<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-3.0.xsd">
    <import resource="spring-jcaptcha.xml" />
    <!-- jdbc.properties文件路径,es-hosts配置  -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/com/ningpai/web/config/jdbc.properties</value>
                <value>classpath:/com/ningpai/web/config/es-hosts.properties</value>
                <value>classpath:/com/ningpai/web/config/redis.properties</value>
            </list>
        </property> <!--value="classpath:/com/ningpai/web/config/jdbc.properties" />-->
    </bean>

    <!-- 数据源的配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- data source configuration -->
        <property name="initialSize" value="100" /><!-- initial connections -->
        <property name="maxActive" value="200" /><!-- MAX connections -->
        <property name="maxIdle" value="50" /><!-- MAX idle connections -->
        <property name="minIdle" value="10" /><!-- MIN idle connections -->
        <!-- 处理mysql 8小时自动断开连接的问题 -->
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="validationQuery" value="select 1" />
        <property name="timeBetweenEvictionRunsMillis" value="20000" />
        <property name="numTestsPerEvictionRun" value="100" />
        <property name="filters" value="${druid.filters}" />
    </bean>
    <!--事务相关控制-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <context:component-scan  base-package="com.ningpai"/>
    <!--启动注解 @Transactional -->
    <tx:annotation-driven/>
    <!--
    <tx:advice id="userTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="pc" expression="execution(* com.ningpai.web.impl.*.*(..)) " />
                把事务控制在Business层
        <aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
    </aop:config>
      -->
    <!-- MyBatis sqlSessionFactory 配置 mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation"
                  value="classpath:/com/ningpai/web/mybatis/SqlMapConfig.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    <!-- 设置字段内容长度，这里不做限定   -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />

    <!--esClientManager,设置为单例-->
    <bean id="esClientManager" class="com.ningpai.searchplatform.client.ESClientManager" scope="singleton">
        <constructor-arg index="0" type="java.lang.String">
            <value>${es.hosts}</value>
        </constructor-arg>
        <constructor-arg index="1" type="java.lang.String" value="${es.cluster.name}"/>
    </bean>
    <!-- 线程池 -->
    <!--spring线程池-->
    <bean id="threadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!--核心线程数-->
        <property name="corePoolSize" value="20"/>
        <!--最大线程数-->
        <property name="maxPoolSize" value="50"/>
        <!--队列最大长度-->
        <property name="queueCapacity" value="200"/>
        <!--线程池维护线程所允许的空闲时间-->
        <property name="keepAliveSeconds" value="300"/>
        <!--程序关闭时等待线程执行完毕-->
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <!-- 定时任务 -->
    <!--<task:scheduled-tasks>-->
        <!--<task:scheduled ref="SiteOrderService" method="receiptConfirmation" cron="59 59 23 ? * *"/>-->
    <!--</task:scheduled-tasks>-->

    <task:scheduler id="taskScheduler"/>
    <task:executor id="taskExecutor" pool-size="5"/>
    <task:annotation-driven executor="taskScheduler" scheduler="taskScheduler"/>


     <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
         <property name="maxIdle" value="${redis.maxIdle}" />
         <property name="maxActive" value="${redis.maxActive}" />
         <property name="maxWait" value="${redis.maxWait}" />
         <property name="testOnBorrow" value="${redis.testOnBorrow}" />
     </bean>

     <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
         p:host-name="${redis.host}" p:port="${redis.port}"  p:pool-config-ref="poolConfig"/>

     <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
         <property name="connectionFactory"   ref="connectionFactory" />
     </bean>

     <bean id="SpringApplicationContext" class="com.ningpai.common.util.ApplicationContextHelper"></bean>


    <bean class="com.ningpai.site.util.RedisStartUtil" init-method="init"/>

    <bean id="redisAdapter" class="com.ningpai.redis.RedisAdapter" scope="singleton"></bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ningpai.deposit.mapper" />
    </bean>
</beans>
